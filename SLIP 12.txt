SLIP 12

Q.1 Write a Java Program to implement Decorator Pattern for interface Car to define the
assemble() method and then decorate it to Sports car and Luxury Car


interface Car {
    void assemble();
}

class BasicCar implements Car {
    @Override
    public void assemble() {
        System.out.println("Basic car features assembled.");
    }
}

abstract class CarDecorator implements Car {
    protected Car car;

    public CarDecorator(Car car) {
        this.car = car;
    }

    @Override
    public void assemble() {
        car.assemble();
    }
}

class SportsCar extends CarDecorator {
    public SportsCar(Car car) {
        super(car);
    }

    @Override
    public void assemble() {
        super.assemble();
        addSportsCar();
    }

    private void addSportsCar() {
        System.out.println("Adding sports car features...");
    }
}

class LuxuryCar extends CarDecorator {
    public LuxuryCar(Car car) {
        super(car);
    }

    @Override
    public void assemble() {
        super.assemble();
        addLuxuryCar();
    }

    private void addLuxuryCar() {
        System.out.println("Adding luxury car features...");
    }
}

public class DecoratorPatternDemo {
    public static void main(String[] args) {
        Car basicCar = new BasicCar();
        System.out.println("Basic car assembled:");
        basicCar.assemble();

        Car sportsCar = new SportsCar(basicCar);
        System.out.println("\nSports car assembled:");
        sportsCar.assemble();

        Car luxuryCar = new LuxuryCar(sportsCar);
        System.out.println("\nLuxury car assembled:");
        luxuryCar.assemble();
    }
}
============================================
Q. 2 Write a python program to make Categorical values in numeric format for a given
 dataset.

import pandas as pd
from sklearn.preprocessing import LabelEncoder

# Sample dataset
data = {
    'Category': ['A', 'B', 'A', 'C', 'B', 'C'],
    'Value': [10, 20, 15, 25, 30, 22]
}

df = pd.DataFrame(data)

# Use LabelEncoder to convert categorical values to numeric
le = LabelEncoder()

# Apply label encoder to the 'Category' column
df['Category'] = le.fit_transform(df['Category'])

# Display the modified dataset
print(df)
==================================================
Q.3 Create a Simple Web Server using node js.

--> Not Answered.
